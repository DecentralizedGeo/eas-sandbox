# Configuration for example scripts

create-onchain-attestation:
  # Corresponds to the schema: "uint256 eventId, uint8 voteIndex"
  - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995"
    schemaString: "uint256 eventId, uint8 voteIndex" # Optional, but good for validation
    recipient: "0xFD50b031E778fAb33DfD2Fc3Ca66a1EeF0652165" # Optional, defaults to ZeroAddress if omitted
    revocable: true # Optional, defaults to true
    expirationTime: 0 # Optional, defaults to 0 (no expiration). Use string for large BigInts if needed.
    # referenceUid: "0x..." # Optional: Add if creating a chained attestation
    fields:
      eventId: 12345 # Value for the 'eventId' field (uint256)
      voteIndex: 1 # Value for the 'voteIndex' field (uint8)

create-offchain-attestation:
  # Corresponds to the schema: "uint256 eventId, uint8 voteIndex"
  - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995"
    schemaString: "uint256 eventId, uint8 voteIndex"
    recipient: "0xFD50b031E778fAb33DfD2Fc3Ca66a1EeF0652165"
    revocable: true
    expirationTime: 0
    fields:
      eventId: 999 # Different example data
      voteIndex: 2 # Different example data

register-schema:
  - schemaString: "uint256 eventId, uint8 voteIndex" # Schema string to register
    revocable: true # Whether attestations using this schema are revocable
    # resolverAddress: "0x..." # Optional: Address of a resolver contract

fetch-schema:
  - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995" # UID of the schema to fetch

get-attestation:
  - attestationUid: "0x57321fea9593900bc3bc302b797d4f00595278f18de331d5a80c31815d2a0132" # UID of the attestation to fetch - REPLACE WITH A REAL UID

revoke-attestation:
  - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995" # Schema UID of the attestation to revoke
    attestationUid: "0x57321fea9593900bc3bc302b797d4f00595278f18de331d5a80c31815d2a0132" # UID of the attestation to revoke - REPLACE WITH A REAL UID

save-offchain-attestation:
  - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995" # Schema UID of the attestation to save
    recipient: "0xFD50b031E778fAb33DfD2Fc3Ca66a1EeF0652165" # Recipient address for the saved attestation

load-offchain-attestation:
  - attestationUid: "0x57321fea9593900bc3bc302b797d4f00595278f18de331d5a80c31815d2a0132" # UID of the attestation to load - REPLACE WITH A REAL UID

chained-attestation:
  - attestations:
      - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995" # Schema UID of the chained attestation
        schemaString: "uint256 eventId, uint8 voteIndex"
        referenceUid: "0xeeb457f8a9c5c9312010d69e0f7ab1119dcde9b5af421693939460ec6ce38fcf" # UID of the reference attestation - REPLACE WITH A REAL UID
        fields:
          eventId: 999 # Different example data
          voteIndex: 2 # Different example data
      - schemaUid: "0xb16fa048b0d597f5a821747eba64efa4762ee5143e9a80600d0005386edfc995" # Schema UID of the chained attestation
        schemaString: "uint256 eventId, uint8 voteIndex"
        referenceUid: "0xeeb457f8a9c5c9312010d69e0f7ab1119dcde9b5af421693939460ec6ce38fcf" # UID of the reference attestation - REPLACE WITH A REAL UID
        fields:
          eventId: 100 # Different example data
          voteIndex: 1 # Different example data

list-items:
  - recipient: "0x3074C8732366cE5DB80986aBA8FB69897872DdB9"
    referenceUid: "0xeeb457f8a9c5c9312010d69e0f7ab1119dcde9b5af421693939460ec6ce38fcf"
# Add other example script configurations here, keyed by script name (without .ts)
# e.g.:
# register-schema:
#   - schema: "string message"
#     revocable: false
